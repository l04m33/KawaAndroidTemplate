buildscript {
    project.ext {
        if (!project.hasProperty('appId')) {
            project.ext.appId = 'com.theerrorlog.superbapp'
        }
        if (!project.hasProperty('appVersionCode')) {
            project.ext.appVersionCode = 1
        }
        if (!project.hasProperty('appVersionName')) {
            project.ext.appVersionName = '1.0'
        }
        if (!project.hasProperty('keyStoreFile')) {
            project.ext.keyStoreFile = 'release-key.jks'
        }
        if (!project.hasProperty('keyStorePassword')) {
            project.ext.keyStorePassword = '123456'
        }
        if (!project.hasProperty('releaseKeyAlias')) {
            project.ext.releaseKeyAlias = 'relkey'
        }
        if (!project.hasProperty('releaseKeyPassword')) {
            project.ext.releaseKeyPassword = '123456'
        }
        if (!project.hasProperty('localLibsDir')) {
            project.ext.localLibsDir = 'libs'
        }
        if (!project.hasProperty('androidCompileSdkVersion')) {
            project.ext.androidCompileSdkVersion = 28
        }
        if (!project.hasProperty('androidTargetSdkVersion')) {
            project.ext.androidTargetSdkVersion = 28
        }
        if (!project.hasProperty('androidMinSdkVersion')) {
            project.ext.androidMinSdkVersion = 23
        }
        if (!project.hasProperty('androidBuildToolsVersion')) {
            project.ext.androidBuildToolsVersion = '28.0.2'
        }
        if (!project.hasProperty('androidGradlePluginVersion')) {
            project.ext.androidGradlePluginVersion = '3.1.0'
        }
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:${androidGradlePluginVersion}"
    }
}

plugins {
    id 'com.medranocalvo.gradle.gradle-android-kawa-plugin' version '0.9'
}
apply plugin: 'com.android.application'

allprojects {
    repositories {
        google()
        jcenter()
    }
}

dependencies {
    implementation fileTree(dir: localLibsDir, include: ['*.jar'])
}

kawa {
    language 'scheme'
}

android {
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId appId
        targetSdkVersion androidTargetSdkVersion
        minSdkVersion androidMinSdkVersion
        versionCode appVersionCode
        versionName appVersionName
    }

    sourceSets {
        main {
            kawa {
                srcDir 'src/main/kawa'
            }
        }
    }

    signingConfigs {
        release {
            storeFile file(keyStoreFile)
            storePassword keyStorePassword
            keyAlias releaseKeyAlias
            keyPassword releaseKeyPassword
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            kawa {
                inline true
            }
        }

        debug {
            kawa {
                // XXX: Setting `--no-inline` messes up the bytecode output for static
                //      initialization blocks
                inline true
            }
        }
    }
}
